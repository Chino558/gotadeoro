name: Flutter iOS Build (Push, PR, Manual, Release)

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a GitHub Release with the IPA?'
        required: false
        type: boolean
        default: false
      release_tag:
        description: 'Tag for the release (e.g., v1.0.0). Required if creating a release.'
        required: false
        type: string
      build_number:
        description: 'Optional build number (e.g., for versioning)'
        required: false
        type: string

jobs:
  build_and_release:
    name: Build iOS IPA & Optionally Release
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # Or 'beta', 'dev', '3.x.x'

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Clean previous build (optional)
        run: flutter clean

      - name: Build iOS (unsigned IPA)
        run: |
          if [ -n "${{ github.event.inputs.build_number }}" ]; then
            flutter build ipa --no-codesign --build-number=${{ github.event.inputs.build_number }}
          else
            flutter build ipa --no-codesign
          fi

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-ios-ipa # Artifact name
          path: build/ios/ipa/*.ipa # Path to the IPA file(s)
          if-no-files-found: error # Fail if no IPA is found

      - name: Create GitHub Release (if specified)
        if: github.event.inputs.create_release == 'true' && github.event.inputs.release_tag != ''
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/ios/ipa/*.ipa"
          tag: ${{ github.event.inputs.release_tag }}
          name: "Release ${{ github.event.inputs.release_tag }}"
          body: "Automated iOS build for release ${{ github.event.inputs.release_tag }}"
          token: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is automatically available
          allowUpdates: true # Allows updating release if tag already exists